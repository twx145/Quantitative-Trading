; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "quantitative-trading"
#define MyAppVersion "1.2.0"
#define MyAppId     "{5F721783-DE1D-4006-8E93-310BA5BD4E4D}"

[Setup]
AppId={{5F721783-DE1D-4006-8E93-310BA5BD4E4D}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher=TWX
DefaultDirName={autopf}\{#MyAppName}
DisableDirPage=no
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=no
OutputBaseFilename={#MyAppName}-{#MyAppVersion}-setup
OutputDir=target/
SetupIconFile=D:\quantitave-analysis\quantitative-trading\src\main\resources\com\twx\platform\ui\windows\icon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=admin
UninstallDisplayIcon={app}\{#MyAppName}.exe
; 注意：官方没有 UninstallPreviousVersion 关键字，下面用 [Code] 实现

[Languages]
Name: "chinesesimp"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
; !!! 请把下面路径改成你真实的构建输出目录 !!!
Source: "D:\quantitave-analysis\quantitative-trading\target\quantitative-trading\*"; \
        DestDir: "{app}"; Flags: recursesubdirs createallsubdirs ignoreversion

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppName}.exe"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppName}.exe"; Tasks: desktopicon
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Run]
Filename: "{app}\{#MyAppName}.exe"; Description: "{cm:LaunchProgram,{#MyAppName}}"; Flags: nowait postinstall skipifsilent

[Code]
const
  UninstSubkey = 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{#MyAppId}_is1';

// 同时查询 32/64 位视图
function GetUninstallString: String;
begin
  // 64 位视图
  if not RegQueryStringValue(HKLM64, UninstSubkey, 'UninstallString', Result) then
    if not RegQueryStringValue(HKCU64, UninstSubkey, 'UninstallString', Result) then
      // 32 位视图
      if not RegQueryStringValue(HKLM32, UninstSubkey, 'UninstallString', Result) then
        RegQueryStringValue(HKCU32, UninstSubkey, 'UninstallString', Result);
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  UninstPath, Param: String;
  ExitCode: Integer;
begin
  if CurStep = ssInstall then        // 在真正复制文件前执行
  begin
    UninstPath := GetUninstallString;
    if UninstPath <> '' then
    begin
      UninstPath := RemoveQuotes(UninstPath);
      Param := '/SILENT /NORESTART /SUPPRESSMSGBOXES';
      if Exec(UninstPath, Param, '', SW_HIDE, ewWaitUntilTerminated, ExitCode) then
      begin
        if ExitCode <> 0 then
          MsgBox('卸载旧版本失败，安装将中止。', mbError, MB_OK);
      end
      else
        MsgBox('无法启动旧版本卸载程序，安装将中止。', mbError, MB_OK);
    end;
  end;
end;